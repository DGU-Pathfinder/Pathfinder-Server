# Generated by Django 4.2.7 on 2023-12-09 18:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'expert',
            },
        ),
        migrations.CreateModel(
            name='Welder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.PositiveIntegerField(default=0)),
                ('success_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'welder',
            },
        ),
        migrations.CreateModel(
            name='RtImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='pathfinder_app/images/%Y/%m/%d')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('welder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pathfinder_app.welder')),
            ],
            options={
                'db_table': 'rt_image',
            },
        ),
        migrations.CreateModel(
            name='ExpertDefect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(max_length=20)),
                ('xmin', models.FloatField()),
                ('ymin', models.FloatField()),
                ('xmax', models.FloatField()),
                ('ymax', models.FloatField()),
                ('modified_date', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expert_defect_set', to='pathfinder_app.expert')),
                ('modifier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expert_defect',
            },
        ),
        migrations.AddField(
            model_name='expert',
            name='rt_image',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert', to='pathfinder_app.rtimage'),
        ),
        migrations.CreateModel(
            name='AiModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rt_image', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_model', to='pathfinder_app.rtimage')),
            ],
            options={
                'db_table': 'ai_model',
            },
        ),
        migrations.CreateModel(
            name='AiDefect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_type', models.CharField(max_length=20)),
                ('xmin', models.FloatField()),
                ('ymin', models.FloatField()),
                ('xmax', models.FloatField()),
                ('ymax', models.FloatField()),
                ('score', models.FloatField()),
                ('ai_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_defect_set', to='pathfinder_app.aimodel')),
            ],
            options={
                'db_table': 'ai_defect',
            },
        ),
    ]
